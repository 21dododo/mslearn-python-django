# Python to Linux Web App on Azure
# Build your Python project and deploy it to Azure as a Linux Web App.
# Change python version to one thats appropriate for your application.
# https://docs.microsoft.com/azure/devops/pipelines/languages/python
#commit comment for checking change

trigger:
- master

variables:
  # Azure Resource Manager connection created during pipeline creation
  azureServiceConnectionId: '9bc00ef9-3d3e-4723-8553-79869f57c0b9'
  
  # Web app name
  webAppDev: 'final-cicd-dev123'
  webAppTest: 'final-cicd-test123'
  webAppStaging: 'final-cicd-staging123'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

  # Environment name
  environmentDev: 'final-cicd-dev123'
  environmentTest: 'final-cicd-test123'
  environmentStaging: 'final-cicd-staging123'

  # Project root folder. Point to the folder containing manage.py file.
  projectRoot: $(System.DefaultWorkingDirectory)/Application
  
  # Python version: 3.7
  pythonVersion: '3.7'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: BuildJob
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(pythonVersion)'
      displayName: 'Use Python $(pythonVersion)'
    
    - script: |
        python -m venv antenv
        source antenv/bin/activate
        python -m pip install --upgrade pip
        pip install setup
        pip install -r requirements.txt
      workingDirectory: $(projectRoot)
      displayName: "Install requirements"

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(projectRoot)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      displayName: 'Upload package'
      artifact: drop
      
    - script: |
        pip install setup
        pip install -r $(projectRoot)/requirements.txt
        pip install pytest
        pytest Tests/unit_tests --junitxml=$(System.DefaultWorkingDirectory)/TestResults/test-results-unit.xml
        pip install pycmd
        py.cleanup Tests/
      displayName: 'Run unit tests'

    - task: PublishTestResults@2
      inputs:        
        searchFolder: $(System.DefaultWorkingDirectory)
        testResultsFiles: '**/test-*.xml'
      displayName: 'Publish test results'

    - publish: $(System.DefaultWorkingDirectory)/Tests
      artifact: tests

- stage: Deploy_dev
  displayName: 'Deploy to dev'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeploymentJob
    pool:
      vmImage: $(vmImageName)
    environment: $(environmentDev)
    strategy:
      runOnce:
        deploy:
          steps:
          
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '$(pythonVersion)'
            displayName: 'Use Python version'

          - task: AzureWebApp@1
            displayName: 'Deploy Azure Web App : final-cicd-dev123'
            inputs:
              azureSubscription: $(azureServiceConnectionId)
              appName: $(webAppDev)
              package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip

- stage: Deploy_test
  displayName: 'Deploy to test'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeploymentJob
    pool:
      vmImage: $(vmImageName)
    environment: $(environmentTest)
    strategy:
      runOnce:
        deploy:
          steps:
          
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '$(pythonVersion)'
            displayName: 'Use Python version'

          - task: AzureWebApp@1
            displayName: 'Deploy Azure Web App : final-cicd-test123'
            inputs:
              azureSubscription: $(azureServiceConnectionId)
              appName: $(webAppTest)
              package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
          
          #Selenium tests
          - script: |
              pip install selenium
              pip install pytest
              pytest tests/functional_tests/ --webAppUrl=https://$(webAppTest).azurewebsites.net --junitxml=$(System.DefaultWorkingDirectory)/TestResults/test-results-functional.xml
            workingDirectory: $(Pipeline.Workspace)
            displayName: 'Run functional tests'

          - task: PublishTestResults@2
            inputs:
              searchFolder: $(Pipeline.Workspace)
              testResultsFiles: '**/test-*.xml'
            displayName: 'Publish test results'

- stage: Deploy_staging
  displayName: 'Deploy to staging'
  dependsOn: Deploy_test
  condition: succeeded()
  jobs:
  - deployment: DeploymentJob
    pool:
      vmImage: $(vmImageName)
    environment: $(environmentStaging)
    strategy:
      runOnce:
        deploy:
          steps:
          
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '$(pythonVersion)'
            displayName: 'Use Python version'

          - task: AzureWebApp@1
            displayName: 'Deploy Azure Web App : final-cicd-staging123'
            inputs:
              azureSubscription: $(azureServiceConnectionId)
              appName: $(webAppStaging)
              package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
